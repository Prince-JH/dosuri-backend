name: Deploy to EB

on:
  push:
    branches:
      - prod

jobs:
  buildAndTest:
    name: CI Pipeline
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: dosuri
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        python-version: [ 3.8 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Psql Client
        run: sudo apt-get install -y libpq-dev postgresql-client

      - name: Create Psql
        run: PGPASSWORD=dosuri psql -U postgres -h localhost -c 'CREATE DATABASE "dosuri-test"'

      - name: Run Tests
        run: make test

      - name: Execute Collect Staticfiles
        run: python3 manage.py collectstatic

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Stdout message on success
        run: echo "CI finished successfully"

  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest

    needs: buildAndTest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*' './src/*' './aws/*' awscliv2.zip

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: dosuri
          environment_name: Dosuri-env
          region: ${{ secrets.AWS_REGION }}
          version_label: ${{github.SHA}}
          deployment_package: deploy.zip